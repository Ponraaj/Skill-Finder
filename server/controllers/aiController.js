import {VertexAI} from '@google-cloud/vertexai'

// Initialize Vertex with your Cloud project and location
const vertex_ai = new VertexAI({project: 'caramel-binder-430710-t8', location: 'us-central1'});
const model = 'gemini-1.5-flash-001';

// Instantiate the models
const generativeModel = vertex_ai.preview.getGenerativeModel({
  model: model,
  generationConfig: {
    'maxOutputTokens': 8192,
    'temperature': 1,
    'topP': 0.95,
  },
  safetySettings: [
    {
        'category': 'HARM_CATEGORY_HATE_SPEECH',
        'threshold': 'BLOCK_MEDIUM_AND_ABOVE'
    },
    {
        'category': 'HARM_CATEGORY_DANGEROUS_CONTENT',
        'threshold': 'BLOCK_MEDIUM_AND_ABOVE'
    },
    {
        'category': 'HARM_CATEGORY_SEXUALLY_EXPLICIT',
        'threshold': 'BLOCK_MEDIUM_AND_ABOVE'
    },
    {
        'category': 'HARM_CATEGORY_HARASSMENT',
        'threshold': 'BLOCK_MEDIUM_AND_ABOVE'
    }
  ],
  systemInstruction: {
    parts: [{"text": "You are a helpful job and skill recommender based on the skills they already have"}]
  },
});

const document1 = {
  inlineData: {
    mimeType: 'text/plain',
    data: "eyJpbnB1dF90ZXh0IjogIkpvYiBUaXRsZTogSG91c2VrZWVwZXIgSSAtIFBUXG5Ta2lsbHM6IEJ1aWxkaW5nIEN1c3RvZGlhbCBTZXJ2aWNlcywgQ2xlYW5pbmcsIEphbml0b3JpYWwgU2VydmljZXMsIE1hdGVyaWFscyBIYW5kbGluZywgSG91c2VrZWVwaW5nLCBTYW5pdGF0aW9uLCBXYXN0ZSBNYW5hZ2VtZW50LCBGbG9vciBNYWludGVuYW5jZSwgRXF1aXBtZW50IE1haW50ZW5hbmNlLCBTYWZldHkgUHJvdG9jb2xzLCBDb21tdW5pY2F0aW9uIFNraWxscywgQXR0ZW50aW9uIHRvIERldGFpbCwgUGh5c2ljYWwgU3RyZW5ndGgsIEV4cGVyaWVuY2UgaW4gSG91c2VrZWVwaW5nXG5MZXZlbDogTWlkIHNlbmlvclxuVHlwZTogT25zaXRlIiwgIm91dHB1dF90ZXh0IjogIlRoZSBqb2IgdGl0bGVkICdIb3VzZWtlZXBlciBJIC0gUFQnIHJlcXVpcmVzIHNraWxscyBpbiBCdWlsZGluZyBDdXN0b2RpYWwgU2VydmljZXMsIENsZWFuaW5nIGFuZCBtb3JlLiBJdCBpcyBhIE1pZCBzZW5pb3IgcG9zaXRpb24gYW5kIGlzIE9uc2l0ZS4ifQp7ImlucHV0X3RleHQiOiAiSm9iIFRpdGxlOiBBc3Npc3RhbnQgR2VuZXJhbCBNYW5hZ2VyIC0gSHVudGluZ3RvbiA0MTMxXG5Ta2lsbHM6IEN1c3RvbWVyIHNlcnZpY2UsIFJlc3RhdXJhbnQgbWFuYWdlbWVudCwgRm9vZCBzYWZldHksIFRyYWluaW5nLCBTdXBlcnZpc2lvbiwgU2NoZWR1bGluZywgSW52ZW50b3J5LCBDb3N0IGNvbnRyb2wsIFNhbGVzLCBDb21tdW5pY2F0aW9uLCBQcm9ibGVtc29sdmluZywgTGVhZGVyc2hpcCwgTW90aXZhdGlvbiwgVGVhbXdvcmssIEhpZ2ggU2Nob29sIERpcGxvbWEsIEJhY2hlbG9yJ3MgRGVncmVlLCBTZXJ2U2FmZSBDZXJ0aWZpY2F0aW9uLCBWYWxpZCBEcml2ZXIncyBMaWNlbnNlLCBQaHlzaWNhbCBhYmlsaXR5IHRvIHBlcmZvcm0gam9iIGR1dGllc1xuTGV2ZWw6IE1pZCBzZW5pb3JcblR5cGU6IE9uc2l0ZSIsICJvdXRwdXRfdGV4dCI6ICJUaGUgam9iIHRpdGxlZCAnQXNzaXN0YW50IEdlbmVyYWwgTWFuYWdlciAtIEh1bnRpbmd0b24gNDEzMScgcmVxdWlyZXMgc2tpbGxzIGluIEN1c3RvbWVyIHNlcnZpY2UsIFJlc3RhdXJhbnQgbWFuYWdlbWVudCBhbmQgbW9yZS4gSXQgaXMgYSBNaWQgc2VuaW9yIHBvc2l0aW9uIGFuZCBpcyBPbnNpdGUuIn0KeyJpbnB1dF90ZXh0IjogIkpvYiBUaXRsZTogU2Nob29sLWJhc2VkIEJlaGF2aW9yIEFuYWx5c3RcblNraWxsczogQXBwbGllZCBCZWhhdmlvciBBbmFseXNpcyAoQUJBKSwgRGF0YSBhbmFseXNpcywgQmVoYXZpb3JhbCBhc3Nlc3NtZW50LCBQb3NpdGl2ZSBiZWhhdmlvciBzdXBwb3J0LCBQcm9ncmFtbWluZyBkZXZlbG9wbWVudCwgUHJvZ3Jlc3MgbW9uaXRvcmluZywgU3RhZmYgdHJhaW5pbmcsIFZlcmJhbCBjb21tdW5pY2F0aW9uLCBXcml0dGVuIGNvbW11bmljYXRpb24sIFRlYW0gY29sbGFib3JhdGlvbiwgQXV0aXNtLCBFbW90aW9uYWwvYmVoYXZpb3JhbCBkaXNvcmRlcnMsIEludGVsbGVjdHVhbCBkaXNhYmlsaXRpZXMsIEJDQkEgY2VydGlmaWNhdGlvbiwgTWFzdGVycyBkZWdyZWUsIFByb2Zlc3Npb25hbCBsaWFiaWxpdHkgaW5zdXJhbmNlLCBDbGVhcmFuY2VzIChBY3QgMTUxIEFjdCAzNCBGQkkgVXNlIGNvZGU6IDFLRzZYTiksIFRCIHNjcmVlbmluZywgSW5kZXBlbmRlbnQgY29udHJhY3RvciwgMTA5OVxuTGV2ZWw6IE1pZCBzZW5pb3JcblR5cGU6IE9uc2l0ZSIsICJvdXRwdXRfdGV4dCI6ICJUaGUgam9iIHRpdGxlZCAnU2Nob29sLWJhc2VkIEJlaGF2aW9yIEFuYWx5c3QnIHJlcXVpcmVzIHNraWxscyBpbiBBcHBsaWVkIEJlaGF2aW9yIEFuYWx5c2lzIChBQkEpLCBEYXRhIGFuYWx5c2lzIGFuZCBtb3JlLiBJdCBpcyBhIE1pZCBzZW5pb3IgcG9zaXRpb24gYW5kIGlzIE9uc2l0ZS4ifQp7ImlucHV0X3RleHQiOiAiSm9iIFRpdGxlOiBFbGVjdHJpY2FsIERlcHV0eSBFbmdpbmVlcmluZyBHcm91cCBTdXBlcnZpc29yXG5Ta2lsbHM6IEVsZWN0cmljYWwgRW5naW5lZXJpbmcsIFByb2plY3QgQ29udHJvbHMsIFNjaGVkdWxpbmcsIEVzdGltYXRpbmcsIEVuZ2luZWVyaW5nIEVmZm9ydHMsIFBsYW5uaW5nLCBXb3JrIFBhY2thZ2luZywgQ29tbXVuaWNhdGlvbiBTa2lsbHMsIFZlcmJhbCBDb21tdW5pY2F0aW9uLCBXcml0dGVuIENvbW11bmljYXRpb24sIEVuZ2luZWVyaW5nIFRvb2xzLCBPZmZpY2UgQXV0b21hdGlvbiBUb29scywgSW5kdXN0cnkgR3VpZGVzLCBSZWd1bGF0b3J5IEd1aWRlcywgQ29kZXMsIFN0YW5kYXJkcywgRWxlY3RyaWNhbCBFbmdpbmVlcmluZyBEZXNpZ24gUHJpbmNpcGxlcywgRWxlY3RyaWNhbCBTeXN0ZW1zLCBTY2hlbWF0aWNzLCBMYXlvdXRzLCBFbmdpbmVlcmluZyBEcmF3aW5ncywgU3lzdGVtcyBDYWxjdWxhdGlvbnMsIEVxdWlwbWVudCBTaXppbmcsIENhYmxlIFNpemluZywgUG93ZXIgU3lzdGVtcyBMb2FkIE1vZGVsaW5nLCBQb3dlciBTeXN0ZW1zIEFuYWx5c2lzLCBSZXZpdCwgRVRBUCwgRXF1aXBtZW50IENvbmZpZ3VyYXRpb24gUGFja2FnZXMsIE1lY2hhbmljYWwgRW5naW5lZXJpbmcsIFByb2Nlc3MgRW5naW5lZXJpbmcsIENTSSBNYXN0ZXJmb3JtYXQgU3BlY2lmaWNhdGlvbnMsIFNwZWNzSW50YWN0LCBVbmlmaWVkIEZhY2lsaXRpZXMgQ3JpdGVyaWEsIFdob2xlIEJ1aWxkaW5nIERlc2lnbiBHdWlkZVxuTGV2ZWw6IE1pZCBzZW5pb3JcblR5cGU6IE9uc2l0ZSIsICJvdXRwdXRfdGV4dCI6ICJUaGUgam9iIHRpdGxlZCAnRWxlY3RyaWNhbCBEZXB1dHkgRW5naW5lZXJpbmcgR3JvdXAgU3VwZXJ2aXNvcicgcmVxdWlyZXMgc2tpbGxzIGluIEVsZWN0cmljYWwgRW5naW5lZXJpbmcsIFByb2plY3QgQ29udHJvbHMgYW5kIG1vcmUuIEl0IGlzIGEgTWlkIHNlbmlvciBwb3NpdGlvbiBhbmQgaXMgT25zaXRlLiJ9CnsiaW5wdXRfdGV4dCI6ICJKb2IgVGl0bGU6IEVsZWN0cmljYWwgQXNzZW1ibHkgTGVhZFxuU2tpbGxzOiBFbGVjdHJpY2FsIEFzc2VtYmx5LCBQb2ludCB0byBwb2ludCB3aXJpbmcsIFN0cmlwcGluZyBhbmQgY3JpbXBpbmcgb2Ygd2lyaW5nLCBSZWFkaW5nIGJsdWVwcmludHMgYW5kIFNPUHMsIExlYWRlcnNoaXAgc2tpbGxzLCBDb21tdW5pY2F0aW9uIHNraWxscywgRGlyZWN0aW5nIGFuZCB0cmFpbmluZyBlbXBsb3llZXMsIFByb2JsZW0gc29sdmluZywgRXhjZWxsZW50IGF0dGVuZGFuY2UsIDQ2IHllYXJzIG9mIHJlbGF0ZWQgZXhwZXJpZW5jZSwgSGlnaCBTY2hvb2wgb3IgR0VEXG5MZXZlbDogTWlkIHNlbmlvclxuVHlwZTogT25zaXRlIiwgIm91dHB1dF90ZXh0IjogIlRoZSBqb2IgdGl0bGVkICdFbGVjdHJpY2FsIEFzc2VtYmx5IExlYWQnIHJlcXVpcmVzIHNraWxscyBpbiBFbGVjdHJpY2FsIEFzc2VtYmx5LCBQb2ludCB0byBwb2ludCB3aXJpbmcgYW5kIG1vcmUuIEl0IGlzIGEgTWlkIHNlbmlvciBwb3NpdGlvbiBhbmQgaXMgT25zaXRlLiJ9Cg=="
  }
};

async function generateContent(request,response) {
   const job = request.body.job
  const req = {
    contents: [
      {role: 'user', parts: [document1, {text: `What skills do you recommend me to learn to be a ${job}?`}]}
    ],
  };

  const streamingResp = await generativeModel.generateContentStream(req);

  for await (const item of streamingResp.stream) {
    process.stdout.write('stream chunk: ' + JSON.stringify(item) + '\n');
  }

  process.stdout.write('aggregated response: ' + JSON.stringify(await streamingResp.response));
  response.status(200)
}

export default generateContent